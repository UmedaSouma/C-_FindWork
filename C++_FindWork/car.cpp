//===========================================================================================================================================================
// 
// 車のベース処理 [car.cpp]
// Author : souma umeda
// 
//===========================================================================================================================================================
#include "car.h"

//========================================================================================================================
// コンストラクタ
//========================================================================================================================
CCar::CCar()
{
	// パラメーターの設定

	m_Param.fWeight = MAX_WEIGHT;
	m_Param.nMaxGear = MAX_GEAR;
	m_Param.fBending = MAX_BENDING;
	m_Param.nMaxLife = MAX_LIFE;
	
	for (int i = 0; i < m_Param.nMaxGear; i++)
	{
		m_Param.fMaxSpeed[i] = MAX_SPEED[i];
	}

	m_type = CParamStorage::CAR_NORMAL;
}

//========================================================================================================================
// デストラクタ
//========================================================================================================================
CCar::~CCar()
{
}

//========================================================================================================================
// 初期設定
//========================================================================================================================
HRESULT CCar::Init()
{
	InitType();

	CActor::Init();

	return S_OK;
}

//========================================================================================================================
// 終了処理
//========================================================================================================================
void CCar::Uninit()
{
	CActor::Uninit();
}

//========================================================================================================================
// 更新処理
//========================================================================================================================
void CCar::Update()
{
	CActor::Update();
}

//========================================================================================================================
// 描画処理
//========================================================================================================================
void CCar::Draw()
{
	CActor::Draw();
}

//===========================================================================================================
// タイプごとの初期設定
//===========================================================================================================
void CCar::InitType()
{
	switch (m_type)
	{
	case CParamStorage::CAR_NORMAL:

		SetModel("data\\model\\car_normal_000.x");	// モデルを設定


		break;

	case CParamStorage::CAR_TRACK:

		break;

	case CParamStorage::CAR_SPORTS:

		break;

	default:
		break;
	}
}

//===========================================================================================================
// アクセル処理
//===========================================================================================================
void CCar::ActionAccele()
{
	D3DXVECTOR3 move = GetMove();

	if (move.z < 150.0f)
	{
		move.z += 0.5f;
	}

	SetMove({ 0.0f,0.0f,move.z });
}

//===========================================================================================================
// ブレーキ処理
//===========================================================================================================
void CCar::ActionBrake()
{
	D3DXVECTOR3 move = GetMove();

	move.z -= 0.1f;

	SetMove({ 0.0f,0.0f,move.z });
}

//===========================================================================================================
// カーブ処理
//===========================================================================================================
void CCar::ActionBend_R()
{
}

//===========================================================================================================
// カーブ処理
//===========================================================================================================
void CCar::ActionBend_L()
{
}

//===========================================================================================================
// ブースト処理
//===========================================================================================================
void CCar::ActionBoost()
{
}

//========================================================================================================================
// 生成処理
//========================================================================================================================
CCar* CCar::Create()
{
	CCar* pCar = new CCar;

	pCar->Init();

	return pCar;
}